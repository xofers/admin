<extend name="Public:base" />

<block name="style">
	<link rel="stylesheet" type="text/css" href="__SCRIPTS__/metroinc/plugins/bootstrap-icheck/skins/all.css"/>
	
	<link rel="stylesheet" href="__SCRIPTS__/metroinc/plugins/codemirror/codemirror.css">
	<link rel="stylesheet" href="__SCRIPTS__/metroinc/plugins/codemirror/theme/{:C('codemirror_theme')}.css">
	<style>
		.CodeMirror,#preview_window{
			width:700px;
			height:500px;
		}
		#preview_window.loading{
			background: url('__SCRIPTS__/metroinc/plugins/thinkbox/skin/default/tips_loading.gif') no-repeat center;
		}

		#preview_window textarea{
			display: none;
		}
	</style>
	<style>
		/*textarea{
			resize: none;	
		}*/
	</style>
</block>

<block name="header">
	<include file="Public:header" />
</block>

<block name="left">
	<include file="Public:left" />
</block>

<block name="address">
	<include file="Public:address" />
</block>

<block name="content">
	<div class="row">
		<div class="col-md-12">
			<div class="tab-content">
				<div class="tab-pane active">
					<div class="portlet box light-grey">
						<div class="portlet-title">
							<i class="fa fa-plus"></i> 插件快速创建
						</div>
						<div class="portlet-body form">
							<div class="form-body">
								<div class="row">
									<form action="{:U('build')}" method="post" class="horizontal-form" id="form" >
										<div class="col-md-6">
											<div class="form-group">
												<label class="control-label">行为名称<span>（请输入插件标识）</span></label>
												<div class="controls">
													<input type="text" class="form-control input-xlarge" name="info[name]" value="Example">
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												<label class="control-label">插件名<span>（请输入插件名）</span></label>
												<div class="controls">
													<input type="text" class="form-control input-xlarge" name="info[title]" value="示例">
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												<label class="control-label">版本<span>（请输入插件版本）</span></label>
												<div class="controls">
													<input type="text" class="form-control input-xlarge" name="info[version]" value="0.1">
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												<label class="control-label">作者<span>（请输入插件作者）</span></label>
												<div class="controls">
													<input type="text" class="form-control input-xlarge" name="info[author]" value="无名">
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												<label class="control-label">安装后是否启用</label>
												<div class="controls">
													<input type="checkbox" class="form-control" name="info[status]" value="1" checked />
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												<label class="control-label">是否需要外部访问</label>
												<div class="controls">
													<input type="checkbox" class="form-control" name="has_outurl" value="1"  />
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												<label class="control-label">是否需要配置</label>
												<div class="controls">
													<input type="checkbox" class="form-control" name="has_config" value="1" />
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												<label class="control-label">是否需要后台列表</label>
												<div class="controls">
													<input type="checkbox" class="form-control" name="has_adminlist" value="1" />&nbsp;勾选，扩展里已装插件后台列表会出现插件名的列表菜单，如系统的附件
												</div>
											</div>
										</div>
										<div class="col-md-12 has_config hidden">
											<div class="form-group">
												<div class="controls">
													自定义模板,注意：自定义模板里的表单name必须为config[name]这种，获取保存后配置的值用$data.config.name
													<input type="text" class="form-control margin-bottom-10" name="custom_config">
													<textarea class="form-control" rows="8" name="config">
&lt;?php
return array(
	'random'=>array(//配置在表单中的键名 ,这个会是config[random]
		'title'=>'是否开启随机:',//表单的文字
		'type'=>'radio',		 //表单的类型：text、textarea、checkbox、radio、select等
		'options'=>array(		 //select 和radion、checkbox的子选项
			'1'=>'开启',		 //值=>文字
			'0'=>'关闭',
		),
		'value'=>'1',			 //表单的默认值
	),
);</textarea>
												</div>
											</div>
										</div>
										<div class="col-md-12 has_adminlist hidden">
											<div class="form-group">
												<div class="controls">
													自定义模板,注意：自定义模板里的列表变量为$_list这种,遍历后可以用listkey可以控制表头显示,也可以完全手写，分页变量用$_page
													<input type="text" class="form-control  margin-bottom-10" name="custom_adminlist">
													<textarea class="form-control" rows="8" name="admin_list">
'model'=>'Example',		//要查的表
'fields'=>'*',			//要查的字段
'map'=>'',				//查询条件, 如果需要可以再插件类的构造方法里动态重置这个属性
'order'=>'id desc',		//排序,
'list_grid'=>array( 		//这里定义的是除了id序号外的表格里字段显示的表头名和模型一样支持函数和链接
    'cover_id|preview_pic:封面',
    'title:书名',
    'description:描述',
    'link_id|get_link:外链',
    'update_time|time_format:更新时间',
    'id:操作:[EDIT]|编辑,[DELETE]|删除'
),</textarea>
												</div>
											</div>
										</div>
										<div class="col-md-12">
											<div class="form-group">
												<label class="control-label">实现的钩子方法</label>
												<div class="controls">
													<select class="select form-control" name="hook[]" size="10" style="width: 100%; border: 1px solid #E5E5E5;" multiple required>
														<volist name="Hooks" id="vo">
															<option value="{$vo.name}" title="{$vo.description}">{$vo.name}</option>
														</volist>
													</select>
												</div>
											</div>
										</div>
										<div class="col-md-12">
											<div class="form-group">
												<label class="control-label">描述<span>（请输入描述）</span></label>
												<div class="controls">
													<textarea class="form-control" name="info[description]">这是一个临时描述</textarea>
												</div>
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group">
												<button class="btn purple" type="button" id="preview">预 览</button>
												<button class="btn green ajax-post_custom" type="submit" target-form="horizontal-form">确 定</button>
												<button class="btn blue" onclick="javascript:history.back(-1);return false;">返 回</button>		
											</div>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</block>

<block name="script">
<script src="__SCRIPTS__/metroinc/plugins/bootstrap-icheck/icheck.js" type="text/javascript"></script>

<script type="text/javascript" src="__SCRIPTS__/metroinc/plugins/codemirror/codemirror.js"></script>
<script type="text/javascript" src="__SCRIPTS__/metroinc/plugins/codemirror/xml.js"></script>
<script type="text/javascript" src="__SCRIPTS__/metroinc/plugins/codemirror/javascript.js"></script>
<script type="text/javascript" src="__SCRIPTS__/metroinc/plugins/codemirror/clike.js"></script>
<script type="text/javascript" src="__SCRIPTS__/metroinc/plugins/codemirror/php.js"></script>

<script type="text/javascript" src="__SCRIPTS__/metroinc/plugins/thinkbox/jquery.thinkbox.js"></script>
<script>
highlight_subnav('{:U("Addons/index")}');
$('input[type="checkbox"]').iCheck({
  checkboxClass: 'icheckbox_square-blue'
});
$('input[type="checkbox"]').on('ifChecked', function(event){
	$("."+$(this).attr("name")).removeClass("hidden");
});
$('input[type="checkbox"]').on('ifUnchecked', function(event){
	$("."+$(this).attr("name")).addClass("hidden");
});

$('#preview').click(function(){
	var preview_url = '{:U("preview")}';
	$.post(preview_url, $('#form').serialize(),function(data){
		$.thinkbox('<div id="preview_window" class="loading"><textarea></textarea></div>',{
			afterShow:function(){
				var codemirror_option = {
					lineNumbers   :true,
					matchBrackets :true,
					mode          :"application/x-httpd-php",
					indentUnit    :4,
					gutter        :true,
					fixedGutter   :true,
					indentWithTabs:true,
					readOnly	  :true,
					lineWrapping  :true,
					height		  :500,
					enterMode     :"keep",
					tabMode       :"shift",
					theme: "{:C('CODEMIRROR_THEME')}"
				};
				var preview_window = $("#preview_window").removeClass(".loading").find("textarea");
				var editor = CodeMirror.fromTextArea(preview_window[0], codemirror_option);
				editor.setValue(data);
				$(window).resize();
			},

			title:'预览插件主文件',
			unload: true,
			actions:['close'],
			drag:true
		});
	});
	return false;
});

$('.ajax-post_custom').click(function(){
    var target,query,form;
    var target_form = $(this).attr('target-form');
    var check_url = '{:U('checkForm')}';
	$.ajax({
	   type: "POST",
	   url: check_url,
	   dataType: 'json',
	   async: false,
	   data: $('#form').serialize(),
	   success: function(data){
	    	if(data.status){
		        if( ($(this).attr('type')=='submit') || (target = $(this).attr('href')) || (target = $(this).attr('url')) ){
		            form = $('.'+target_form);
		            if ( form.get(0).nodeName=='FORM' ){
		                target = form.get(0).action;
		                query = form.serialize();
		            }else if( form.get(0).nodeName=='INPUT' || form.get(0).nodeName=='SELECT' || form.get(0).nodeName=='TEXTAREA') {
		                query = form.serialize();
		            }else{
		                query = form.find('input,select,textarea').serialize();
		            }
		            $.post(target,query).success(function(data){
		                if (data.status==1) {
		                    if (data.url) {
		                        Message.success({message:data.info + ' 页面即将自动跳转~'});
		                    }else{
		                        Message.success({message:data.info + ' 页面即将自动刷新~'});
		                    }
		                    setTimeout(function(){
		                        if (data.url) {
		                            location.href=data.url;
		                        }else{
		                        	location.reload();
		                        }
		                    },1500);
		                }else{
		                    Dialog.alert(data.info);
		                }
		            });
		        }
	    	}else{
	    		Dialog.alert(data.info);
			}
	   }
	});

    return false;
});

</script>
</block>